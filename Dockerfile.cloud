# Dockerfile optimizado para despliegue en servicios cloud (Railway, Render, etc.)
FROM php:8.2-fpm-alpine

# Instalar dependencias del sistema
RUN apk add --no-cache \
    nginx \
    nodejs \
    npm \
    mysql-client \
    postgresql-client \
    redis \
    curl \
    zip \
    unzip \
    git \
    libpng-dev \
    libzip-dev \
    libxml2-dev \
    oniguruma-dev \
    postgresql-dev \
    supervisor \
    && docker-php-ext-install pdo_mysql pdo_pgsql mbstring zip exif pcntl bcmath gd

# Instalar Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Configurar directorio de trabajo
WORKDIR /var/www

# Crear usuario no-root
RUN addgroup -g 1000 -S laravel && \
    adduser -u 1000 -S laravel -G laravel

# Copiar archivos de dependencias
COPY composer.json composer.lock package.json package-lock.json ./

# Instalar dependencias como root
RUN composer install --no-dev --optimize-autoloader --no-scripts --no-interaction
RUN npm ci --only=production

# Copiar toda la aplicación (incluye docker/cloud/)
COPY . .

# Configurar archivos de configuración
RUN cp docker/cloud/nginx.conf /etc/nginx/nginx.conf
RUN cp docker/cloud/php-fpm.conf /usr/local/etc/php-fpm.d/www.conf
RUN cp docker/cloud/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
RUN cp docker/cloud/entrypoint.sh /usr/local/bin/entrypoint.sh

# Configurar permisos
RUN chown -R laravel:laravel /var/www \
    && chmod -R 755 /var/www/storage \
    && chmod -R 755 /var/www/bootstrap/cache \
    && chmod +x /usr/local/bin/entrypoint.sh

# Construir assets
RUN npm run build

# Configuración de PHP
RUN echo "post_max_size = 100M" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "upload_max_filesize = 100M" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "max_execution_time = 300" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "memory_limit = 512M" >> /usr/local/etc/php/conf.d/uploads.ini

# Crear directorios necesarios
RUN mkdir -p /var/log/nginx /var/log/supervisor /run/nginx \
    && touch /var/log/nginx/access.log /var/log/nginx/error.log

# Cambiar a usuario laravel
USER laravel

# Exponer puerto (será dinámico en la nube)
EXPOSE 8080

# Script de inicio
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]